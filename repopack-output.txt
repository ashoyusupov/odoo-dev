This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-10-01T10:35:47.413Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
odoo/
  odoo.conf
.gitignore
docker-compose.yml
Makefile
README.md

================================================================
Repository Files
================================================================

================
File: odoo/odoo.conf
================
[options]
addons_path = /mnt/enterprise-addons,/mnt/extra-addons
data_dir = /var/lib/odoo
without_demo=all

================
File: .gitignore
================
.DS_Store
odoo/data/*
odoo/enterprise/*
odoo/extra/*

================
File: docker-compose.yml
================
services:
  odoo:
    image: odoo:17
    restart: unless-stopped
    depends_on:
      - db
    environment:
      HOST: db
      USER: "odoo"
      PASSWORD: "odoo"
    ports:
      - 8069:8069
    volumes:
      - ./odoo/odoo.conf:/etc/odoo/odoo.conf:ro
      - ./odoo/data:/var/lib/odoo
      - ./odoo/enterprise:/mnt/enterprise-addons
      - ./odoo/extra:/mnt/extra-addons

  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: "odoo"
      POSTGRES_PASSWORD: "odoo"
      POSTGRES_USER: "odoo"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - postgres:/var/lib/postgresql/data/pgdata
      - ./odoo/dump:/tmp/dump

  adminer:
    image: adminer:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      #ADMINER_PLUGINS: ""
      ADMINER_DESIGN: pepa-linha
      ADMINER_DEFAULT_SERVER: db
    ports:
      - 8080:8080

volumes:
  postgres:

================
File: Makefile
================
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
current_dir := $(notdir $(patsubst %/,%,$(dir $(mkfile_path))))
DOCKER_COMPOSE := $(shell command -v docker-compose 2> /dev/null)

ifeq ($(DOCKER_COMPOSE),)
	DOCKER_COMPOSE := docker compose
endif

.DEFAULT_GOAL := help
.SILENT: help
help: ## Show help
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

.SILENT: dev
dev: ## Launch development environment
	$(DOCKER_COMPOSE) up

.SILENT: setup
setup: ## First startup setup
	sudo chmod -R 0777 ./odoo/data
	$(DOCKER_COMPOSE) exec odoo sh -c 'odoo -i base -d odoo -r odoo -w odoo --db_host=db'

.SILENT: prune
prune: ## Purge the project
	$(DOCKER_COMPOSE) down
	docker volume rm "$(current_dir)_postgres"
	$(RM) -rf ./odoo/data/filestore/*
	$(RM) -rf ./odoo/data/sessions/*

.SILENT: shell
shell: ## Open a shell in the odoo container
	$(DOCKER_COMPOSE) exec odoo sh

.SILENT: db-import
db-import: ## Import a database dump
	$(eval DUMP=$(shell ls -t ./odoo/dump/ | head -1))
	echo Import du dump : $(DUMP)
	$(DOCKER_COMPOSE) exec db sh -c 'pg_restore -U odoo -d odoo /tmp/$(DUMP)'
	@echo Import du dump : $(DUMP) terminé
	
.ONESHELL:

================
File: README.md
================
<div align="center">
    <h1 align="center">Odoo Boilerplate</h1>
    <p align="center">
        A boilerplate for Odoo application
        <br />
        <br />
        <a href="https://github.com/jdebetaz/odoo-boilerplate/issues">Report Bug</a>
        - 
        <a href="https://github.com/jdebetaz/odoo-boilerplate/issues">Request Feature</a>
    </p>
</div>

## Install

Clone the repo:

```bash
git clone --depth 1 --branch main https://github.com/jdebetaz/odoo-boilerplate.git your-project-name
cd your-project-name
```


## Starting Development

Start the app `without demo` data:

```bash
make dev
```

Database initialization on first launch and terminate the command at the end with `Ctrl+c`

```bash
make setup
```

## Maintainers

- [Jonathan Debétaz](https://github.com/jdebetaz)
